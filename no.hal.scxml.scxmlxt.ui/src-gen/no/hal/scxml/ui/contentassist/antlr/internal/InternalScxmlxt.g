/*
* generated by Xtext
*/
grammar InternalScxmlxt;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package no.hal.scxml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package no.hal.scxml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import no.hal.scxml.services.ScxmlxtGrammarAccess;

}

@parser::members {
 
 	private ScxmlxtGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ScxmlxtGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResourceImport
entryRuleResourceImport 
:
{ before(grammarAccess.getResourceImportRule()); }
	 ruleResourceImport
{ after(grammarAccess.getResourceImportRule()); } 
	 EOF 
;

// Rule ResourceImport
ruleResourceImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResourceImportAccess().getAlternatives()); }
(rule__ResourceImport__Alternatives)
{ after(grammarAccess.getResourceImportAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainModelImport
entryRuleDomainModelImport 
:
{ before(grammarAccess.getDomainModelImportRule()); }
	 ruleDomainModelImport
{ after(grammarAccess.getDomainModelImportRule()); } 
	 EOF 
;

// Rule DomainModelImport
ruleDomainModelImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainModelImportAccess().getGroup()); }
(rule__DomainModelImport__Group__0)
{ after(grammarAccess.getDomainModelImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainDataImport
entryRuleDomainDataImport 
:
{ before(grammarAccess.getDomainDataImportRule()); }
	 ruleDomainDataImport
{ after(grammarAccess.getDomainDataImportRule()); } 
	 EOF 
;

// Rule DomainDataImport
ruleDomainDataImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainDataImportAccess().getGroup()); }
(rule__DomainDataImport__Group__0)
{ after(grammarAccess.getDomainDataImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitialTransition
entryRuleInitialTransition 
:
{ before(grammarAccess.getInitialTransitionRule()); }
	 ruleInitialTransition
{ after(grammarAccess.getInitialTransitionRule()); } 
	 EOF 
;

// Rule InitialTransition
ruleInitialTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialTransitionAccess().getGroup()); }
(rule__InitialTransition__Group__0)
{ after(grammarAccess.getInitialTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAbstractTransition
entryRuleAbstractTransition 
:
{ before(grammarAccess.getAbstractTransitionRule()); }
	 ruleAbstractTransition
{ after(grammarAccess.getAbstractTransitionRule()); } 
	 EOF 
;

// Rule AbstractTransition
ruleAbstractTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractTransitionAccess().getAlternatives()); }
(rule__AbstractTransition__Alternatives)
{ after(grammarAccess.getAbstractTransitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInternalTransition
entryRuleInternalTransition 
:
{ before(grammarAccess.getInternalTransitionRule()); }
	 ruleInternalTransition
{ after(grammarAccess.getInternalTransitionRule()); } 
	 EOF 
;

// Rule InternalTransition
ruleInternalTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInternalTransitionAccess().getGroup()); }
(rule__InternalTransition__Group__0)
{ after(grammarAccess.getInternalTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getAlternatives()); }
(rule__Event__Alternatives)
{ after(grammarAccess.getEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolicEvent
entryRuleSymbolicEvent 
:
{ before(grammarAccess.getSymbolicEventRule()); }
	 ruleSymbolicEvent
{ after(grammarAccess.getSymbolicEventRule()); } 
	 EOF 
;

// Rule SymbolicEvent
ruleSymbolicEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolicEventAccess().getGroup()); }
(rule__SymbolicEvent__Group__0)
{ after(grammarAccess.getSymbolicEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionEvent
entryRuleTransitionEvent 
:
{ before(grammarAccess.getTransitionEventRule()); }
	 ruleTransitionEvent
{ after(grammarAccess.getTransitionEventRule()); } 
	 EOF 
;

// Rule TransitionEvent
ruleTransitionEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionEventAccess().getAlternatives()); }
(rule__TransitionEvent__Alternatives)
{ after(grammarAccess.getTransitionEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnterEvent
entryRuleEnterEvent 
:
{ before(grammarAccess.getEnterEventRule()); }
	 ruleEnterEvent
{ after(grammarAccess.getEnterEventRule()); } 
	 EOF 
;

// Rule EnterEvent
ruleEnterEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnterEventAccess().getGroup()); }
(rule__EnterEvent__Group__0)
{ after(grammarAccess.getEnterEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExitEvent
entryRuleExitEvent 
:
{ before(grammarAccess.getExitEventRule()); }
	 ruleExitEvent
{ after(grammarAccess.getExitEventRule()); } 
	 EOF 
;

// Rule ExitEvent
ruleExitEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitEventAccess().getGroup()); }
(rule__ExitEvent__Group__0)
{ after(grammarAccess.getExitEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScriptEvent
entryRuleScriptEvent 
:
{ before(grammarAccess.getScriptEventRule()); }
	 ruleScriptEvent
{ after(grammarAccess.getScriptEventRule()); } 
	 EOF 
;

// Rule ScriptEvent
ruleScriptEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScriptEventAccess().getScriptAssignment()); }
(rule__ScriptEvent__ScriptAssignment)
{ after(grammarAccess.getScriptEventAccess().getScriptAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimerEvent
entryRuleTimerEvent 
:
{ before(grammarAccess.getTimerEventRule()); }
	 ruleTimerEvent
{ after(grammarAccess.getTimerEventRule()); } 
	 EOF 
;

// Rule TimerEvent
ruleTimerEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimerEventAccess().getGroup()); }
(rule__TimerEvent__Group__0)
{ after(grammarAccess.getTimerEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCondition
entryRuleCondition 
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionAccess().getScriptAssignment()); }
(rule__Condition__ScriptAssignment)
{ after(grammarAccess.getConditionAccess().getScriptAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSymbolicAction
entryRuleSymbolicAction 
:
{ before(grammarAccess.getSymbolicActionRule()); }
	 ruleSymbolicAction
{ after(grammarAccess.getSymbolicActionRule()); } 
	 EOF 
;

// Rule SymbolicAction
ruleSymbolicAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolicActionAccess().getGroup()); }
(rule__SymbolicAction__Group__0)
{ after(grammarAccess.getSymbolicActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScriptAction
entryRuleScriptAction 
:
{ before(grammarAccess.getScriptActionRule()); }
	 ruleScriptAction
{ after(grammarAccess.getScriptActionRule()); } 
	 EOF 
;

// Rule ScriptAction
ruleScriptAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScriptActionAccess().getScriptAssignment()); }
(rule__ScriptAction__ScriptAssignment)
{ after(grammarAccess.getScriptActionAccess().getScriptAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarDef
entryRuleVarDef 
:
{ before(grammarAccess.getVarDefRule()); }
	 ruleVarDef
{ after(grammarAccess.getVarDefRule()); } 
	 EOF 
;

// Rule VarDef
ruleVarDef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarDefAccess().getGroup()); }
(rule__VarDef__Group__0)
{ after(grammarAccess.getVarDefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentAction
entryRuleAssignmentAction 
:
{ before(grammarAccess.getAssignmentActionRule()); }
	 ruleAssignmentAction
{ after(grammarAccess.getAssignmentActionRule()); } 
	 EOF 
;

// Rule AssignmentAction
ruleAssignmentAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentActionAccess().getGroup()); }
(rule__AssignmentAction__Group__0)
{ after(grammarAccess.getAssignmentActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBOOLEAN_LITERAL
entryRuleBOOLEAN_LITERAL 
:
{ before(grammarAccess.getBOOLEAN_LITERALRule()); }
	 ruleBOOLEAN_LITERAL
{ after(grammarAccess.getBOOLEAN_LITERALRule()); } 
	 EOF 
;

// Rule BOOLEAN_LITERAL
ruleBOOLEAN_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
(rule__BOOLEAN_LITERAL__Alternatives)
{ after(grammarAccess.getBOOLEAN_LITERALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFLOAT_LITERAL
entryRuleFLOAT_LITERAL 
:
{ before(grammarAccess.getFLOAT_LITERALRule()); }
	 ruleFLOAT_LITERAL
{ after(grammarAccess.getFLOAT_LITERALRule()); } 
	 EOF 
;

// Rule FLOAT_LITERAL
ruleFLOAT_LITERAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFLOAT_LITERALAccess().getGroup()); }
(rule__FLOAT_LITERAL__Group__0)
{ after(grammarAccess.getFLOAT_LITERALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePOS_INT
entryRulePOS_INT 
:
{ before(grammarAccess.getPOS_INTRule()); }
	 rulePOS_INT
{ after(grammarAccess.getPOS_INTRule()); } 
	 EOF 
;

// Rule POS_INT
rulePOS_INT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPOS_INTAccess().getGroup()); }
(rule__POS_INT__Group__0)
{ after(grammarAccess.getPOS_INTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNEG_INT
entryRuleNEG_INT 
:
{ before(grammarAccess.getNEG_INTRule()); }
	 ruleNEG_INT
{ after(grammarAccess.getNEG_INTRule()); } 
	 EOF 
;

// Rule NEG_INT
ruleNEG_INT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNEG_INTAccess().getGroup()); }
(rule__NEG_INT__Group__0)
{ after(grammarAccess.getNEG_INTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQNAME
entryRuleQNAME 
:
{ before(grammarAccess.getQNAMERule()); }
	 ruleQNAME
{ after(grammarAccess.getQNAMERule()); } 
	 EOF 
;

// Rule QNAME
ruleQNAME
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQNAMEAccess().getGroup()); }
(rule__QNAME__Group__0)
{ after(grammarAccess.getQNAMEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanValueAssignment()); }
(rule__BooleanLiteral__BooleanValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getIntValueAssignment()); }
(rule__IntLiteral__IntValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getIntValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getFloatValueAssignment()); }
(rule__FloatLiteral__FloatValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getFloatValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getStringValueAssignment()); }
(rule__StringLiteral__StringValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getStringValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUriLiteral
entryRuleUriLiteral 
:
{ before(grammarAccess.getUriLiteralRule()); }
	 ruleUriLiteral
{ after(grammarAccess.getUriLiteralRule()); } 
	 EOF 
;

// Rule UriLiteral
ruleUriLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUriLiteralAccess().getUriAssignment()); }
(rule__UriLiteral__UriAssignment)
{ after(grammarAccess.getUriLiteralAccess().getUriAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEObjectUriLiteral
entryRuleEObjectUriLiteral 
:
{ before(grammarAccess.getEObjectUriLiteralRule()); }
	 ruleEObjectUriLiteral
{ after(grammarAccess.getEObjectUriLiteralRule()); } 
	 EOF 
;

// Rule EObjectUriLiteral
ruleEObjectUriLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEObjectUriLiteralAccess().getUriAssignment()); }
(rule__EObjectUriLiteral__UriAssignment)
{ after(grammarAccess.getEObjectUriLiteralAccess().getUriAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayLiteral
entryRuleDelayLiteral 
:
{ before(grammarAccess.getDelayLiteralRule()); }
	 ruleDelayLiteral
{ after(grammarAccess.getDelayLiteralRule()); } 
	 EOF 
;

// Rule DelayLiteral
ruleDelayLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayLiteralAccess().getGroup()); }
(rule__DelayLiteral__Group__0)
{ after(grammarAccess.getDelayLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarRef
entryRuleVarRef 
:
{ before(grammarAccess.getVarRefRule()); }
	 ruleVarRef
{ after(grammarAccess.getVarRefRule()); } 
	 EOF 
;

// Rule VarRef
ruleVarRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarRefAccess().getVarAssignment()); }
(rule__VarRef__VarAssignment)
{ after(grammarAccess.getVarRefAccess().getVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEPath
entryRuleEPath 
:
{ before(grammarAccess.getEPathRule()); }
	 ruleEPath
{ after(grammarAccess.getEPathRule()); } 
	 EOF 
;

// Rule EPath
ruleEPath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEPathAccess().getGroup()); }
(rule__EPath__Group__0)
{ after(grammarAccess.getEPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEStep
entryRuleEStep 
:
{ before(grammarAccess.getEStepRule()); }
	 ruleEStep
{ after(grammarAccess.getEStepRule()); } 
	 EOF 
;

// Rule EStep
ruleEStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStepAccess().getGroup()); }
(rule__EStep__Group__0)
{ after(grammarAccess.getEStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEStepFilter
entryRuleEStepFilter 
:
{ before(grammarAccess.getEStepFilterRule()); }
	 ruleEStepFilter
{ after(grammarAccess.getEStepFilterRule()); } 
	 EOF 
;

// Rule EStepFilter
ruleEStepFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStepFilterAccess().getScriptAssignment()); }
(rule__EStepFilter__ScriptAssignment)
{ after(grammarAccess.getEStepFilterAccess().getScriptAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScriptExpression
entryRuleScriptExpression 
:
{ before(grammarAccess.getScriptExpressionRule()); }
	 ruleScriptExpression
{ after(grammarAccess.getScriptExpressionRule()); } 
	 EOF 
;

// Rule ScriptExpression
ruleScriptExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScriptExpressionAccess().getScriptAssignment()); }
(rule__ScriptExpression__ScriptAssignment)
{ after(grammarAccess.getScriptExpressionAccess().getScriptAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TimeUnit
ruleTimeUnit
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeUnitAccess().getAlternatives()); }
(rule__TimeUnit__Alternatives)
{ after(grammarAccess.getTimeUnitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesAssignment_1_0()); }
(rule__StateMachine__StatesAssignment_1_0)
{ after(grammarAccess.getStateMachineAccess().getStatesAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_1_1()); }
(rule__StateMachine__TransitionsAssignment_1_1)
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getStateMachineAccess().getVariablesAssignment_1_2()); }
(rule__StateMachine__VariablesAssignment_1_2)
{ after(grammarAccess.getStateMachineAccess().getVariablesAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResourceImport__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResourceImportAccess().getDomainModelImportParserRuleCall_0()); }
	ruleDomainModelImport
{ after(grammarAccess.getResourceImportAccess().getDomainModelImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResourceImportAccess().getDomainDataImportParserRuleCall_1()); }
	ruleDomainDataImport
{ after(grammarAccess.getResourceImportAccess().getDomainDataImportParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getStateAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_2_1()); }
(rule__State__Group_2_1__0)
{ after(grammarAccess.getStateAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStatesAssignment_2_1_1_0()); }
(rule__State__StatesAssignment_2_1_1_0)
{ after(grammarAccess.getStateAccess().getStatesAssignment_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getTransitionsAssignment_2_1_1_1()); }
(rule__State__TransitionsAssignment_2_1_1_1)
{ after(grammarAccess.getStateAccess().getTransitionsAssignment_2_1_1_1()); }
)

    |(
{ before(grammarAccess.getStateAccess().getVariablesAssignment_2_1_1_2()); }
(rule__State__VariablesAssignment_2_1_1_2)
{ after(grammarAccess.getStateAccess().getVariablesAssignment_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractTransition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractTransitionAccess().getTransitionParserRuleCall_0()); }
	ruleTransition
{ after(grammarAccess.getAbstractTransitionAccess().getTransitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractTransitionAccess().getInternalTransitionParserRuleCall_1()); }
	ruleInternalTransition
{ after(grammarAccess.getAbstractTransitionAccess().getInternalTransitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_0_0()); }
(rule__Transition__Group_0_0__0)
{ after(grammarAccess.getTransitionAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getGroup_0_1()); }
(rule__Transition__Group_0_1__0)
{ after(grammarAccess.getTransitionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getSymbolicEventParserRuleCall_0()); }
	ruleSymbolicEvent
{ after(grammarAccess.getEventAccess().getSymbolicEventParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEventAccess().getTransitionEventParserRuleCall_1()); }
	ruleTransitionEvent
{ after(grammarAccess.getEventAccess().getTransitionEventParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEventAccess().getEnterEventParserRuleCall_2()); }
	ruleEnterEvent
{ after(grammarAccess.getEventAccess().getEnterEventParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEventAccess().getExitEventParserRuleCall_3()); }
	ruleExitEvent
{ after(grammarAccess.getEventAccess().getExitEventParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEventAccess().getScriptEventParserRuleCall_4()); }
	ruleScriptEvent
{ after(grammarAccess.getEventAccess().getScriptEventParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getEventAccess().getTimerEventParserRuleCall_5()); }
	ruleTimerEvent
{ after(grammarAccess.getEventAccess().getTimerEventParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getAlternatives_0()); }
(rule__TransitionEvent__Alternatives_0)
{ after(grammarAccess.getTransitionEventAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getTransitionEventAccess().getAlternatives_1()); }
(rule__TransitionEvent__Alternatives_1)
{ after(grammarAccess.getTransitionEventAccess().getAlternatives_1()); }
)

    |(
{ before(grammarAccess.getTransitionEventAccess().getAlternatives_2()); }
(rule__TransitionEvent__Alternatives_2)
{ after(grammarAccess.getTransitionEventAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getGroup_0_0()); }
(rule__TransitionEvent__Group_0_0__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getTransitionEventAccess().getGroup_0_1()); }
(rule__TransitionEvent__Group_0_1__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getGroup_1_0()); }
(rule__TransitionEvent__Group_1_0__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getTransitionEventAccess().getGroup_1_1()); }
(rule__TransitionEvent__Group_1_1__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getGroup_2_0()); }
(rule__TransitionEvent__Group_2_0__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTransitionEventAccess().getGroup_2_1()); }
(rule__TransitionEvent__Group_2_1__0)
{ after(grammarAccess.getTransitionEventAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSymbolicActionParserRuleCall_0()); }
	ruleSymbolicAction
{ after(grammarAccess.getActionAccess().getSymbolicActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getScriptActionParserRuleCall_1()); }
	ruleScriptAction
{ after(grammarAccess.getActionAccess().getScriptActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getAssignmentActionParserRuleCall_2()); }
	ruleAssignmentAction
{ after(grammarAccess.getActionAccess().getAssignmentActionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__ManyAlternatives_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getManyAsteriskKeyword_2_2_0_0()); }

	'*' 

{ after(grammarAccess.getVarDefAccess().getManyAsteriskKeyword_2_2_0_0()); }
)

    |(
{ before(grammarAccess.getVarDefAccess().getManyLeftSquareBracketRightSquareBracketKeyword_2_2_0_1()); }

	'[]' 

{ after(grammarAccess.getVarDefAccess().getManyLeftSquareBracketRightSquareBracketKeyword_2_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN_LITERAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBOOLEAN_LITERALAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBOOLEAN_LITERALAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOAT_LITERALAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getFLOAT_LITERALAccess().getINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getFLOAT_LITERALAccess().getPOS_INTParserRuleCall_0_1()); }
	rulePOS_INT
{ after(grammarAccess.getFLOAT_LITERALAccess().getPOS_INTParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getFLOAT_LITERALAccess().getNEG_INTParserRuleCall_0_2()); }
	ruleNEG_INT
{ after(grammarAccess.getFLOAT_LITERALAccess().getNEG_INTParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getScriptExpressionParserRuleCall_1()); }
	ruleScriptExpression
{ after(grammarAccess.getExpressionAccess().getScriptExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getEPathParserRuleCall_2()); }
	ruleEPath
{ after(grammarAccess.getExpressionAccess().getEPathParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_1()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_2()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getUriLiteralParserRuleCall_4()); }
	ruleUriLiteral
{ after(grammarAccess.getLiteralAccess().getUriLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getEObjectUriLiteralParserRuleCall_5()); }
	ruleEObjectUriLiteral
{ after(grammarAccess.getLiteralAccess().getEObjectUriLiteralParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDelayLiteralParserRuleCall_6()); }
	ruleDelayLiteral
{ after(grammarAccess.getLiteralAccess().getDelayLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__IntValueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getIntValueINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getIntLiteralAccess().getIntValueINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getIntLiteralAccess().getIntValuePOS_INTParserRuleCall_0_1()); }
	rulePOS_INT
{ after(grammarAccess.getIntLiteralAccess().getIntValuePOS_INTParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getIntLiteralAccess().getIntValueNEG_INTParserRuleCall_0_2()); }
	ruleNEG_INT
{ after(grammarAccess.getIntLiteralAccess().getIntValueNEG_INTParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeUnitAccess().getMsEnumLiteralDeclaration_0()); }
(	'ms' 
)
{ after(grammarAccess.getTimeUnitAccess().getMsEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTimeUnitAccess().getSEnumLiteralDeclaration_1()); }
(	's' 
)
{ after(grammarAccess.getTimeUnitAccess().getSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTimeUnitAccess().getMEnumLiteralDeclaration_2()); }
(	'm' 
)
{ after(grammarAccess.getTimeUnitAccess().getMEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTimeUnitAccess().getHEnumLiteralDeclaration_3()); }
(	'h' 
)
{ after(grammarAccess.getTimeUnitAccess().getHEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getImportsAssignment_0()); }
(rule__StateMachine__ImportsAssignment_0)*
{ after(grammarAccess.getStateMachineAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getAlternatives_1()); }
(rule__StateMachine__Alternatives_1)*
{ after(grammarAccess.getStateMachineAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DomainModelImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModelImport__Group__0__Impl
	rule__DomainModelImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModelImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelImportAccess().getDomainKeyword_0()); }
(
	'domain' 
)?
{ after(grammarAccess.getDomainModelImportAccess().getDomainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModelImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModelImport__Group__1__Impl
	rule__DomainModelImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModelImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelImportAccess().getModelKeyword_1()); }

	'model' 

{ after(grammarAccess.getDomainModelImportAccess().getModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModelImport__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModelImport__Group__2__Impl
	rule__DomainModelImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModelImport__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelImportAccess().getImportURIAssignment_2()); }
(rule__DomainModelImport__ImportURIAssignment_2)
{ after(grammarAccess.getDomainModelImportAccess().getImportURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModelImport__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainModelImport__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModelImport__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDomainModelImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DomainDataImport__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDataImport__Group__0__Impl
	rule__DomainDataImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDataImport__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDataImportAccess().getDomainKeyword_0()); }
(
	'domain' 
)?
{ after(grammarAccess.getDomainDataImportAccess().getDomainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDataImport__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDataImport__Group__1__Impl
	rule__DomainDataImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDataImport__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDataImportAccess().getDataKeyword_1()); }

	'data' 

{ after(grammarAccess.getDomainDataImportAccess().getDataKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDataImport__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDataImport__Group__2__Impl
	rule__DomainDataImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDataImport__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDataImportAccess().getImportURIAssignment_2()); }
(rule__DomainDataImport__ImportURIAssignment_2)
{ after(grammarAccess.getDomainDataImportAccess().getImportURIAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDataImport__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainDataImport__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDataImport__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDataImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getDomainDataImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialTransitionAssignment_0()); }
(rule__State__InitialTransitionAssignment_0)?
{ after(grammarAccess.getStateAccess().getInitialTransitionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
(rule__State__NameAssignment_1)
{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_2()); }
(rule__State__Alternatives_2)
{ after(grammarAccess.getStateAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_2_1__0__Impl
	rule__State__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_2_1__1__Impl
	rule__State__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_2_1_1()); }
(rule__State__Alternatives_2_1_1)*
{ after(grammarAccess.getStateAccess().getAlternatives_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitialTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialTransition__Group__0__Impl
	rule__InitialTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getInitialTransitionAction_0()); }
(

)
{ after(grammarAccess.getInitialTransitionAccess().getInitialTransitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialTransition__Group__1__Impl
	rule__InitialTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getInitialTransitionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialTransition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialTransition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getGroup_2()); }
(rule__InitialTransition__Group_2__0)?
{ after(grammarAccess.getInitialTransitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InitialTransition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialTransition__Group_2__0__Impl
	rule__InitialTransition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getInitialTransitionAccess().getDoKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitialTransition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitialTransition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getActionAssignment_2_1()); }
(rule__InitialTransition__ActionAssignment_2_1)
{ after(grammarAccess.getInitialTransitionAccess().getActionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_0()); }
(rule__Transition__Alternatives_0)
{ after(grammarAccess.getTransitionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_1()); }
(rule__Transition__Group_1__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_2()); }
(rule__Transition__Group_2__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3()); }
(rule__Transition__Group_3__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTransitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Transition__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0_0__0__Impl
	rule__Transition__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_0_0()); }

	'->' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_0_0_1()); }
(rule__Transition__TargetAssignment_0_0_1)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0_1__0__Impl
	rule__Transition__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_0_1_0()); }
(rule__Transition__TargetAssignment_0_1_0)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }

	'<-' 

{ after(grammarAccess.getTransitionAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_1__0__Impl
	rule__Transition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getOnKeyword_1_0()); }

	'on' 

{ after(grammarAccess.getTransitionAccess().getOnKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_1_1()); }
(rule__Transition__EventAssignment_1_1)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_2__0__Impl
	rule__Transition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIfKeyword_2_0()); }

	'if' 

{ after(grammarAccess.getTransitionAccess().getIfKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionAssignment_2_1()); }
(rule__Transition__ConditionAssignment_2_1)
{ after(grammarAccess.getTransitionAccess().getConditionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__0__Impl
	rule__Transition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getTransitionAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionAssignment_3_1()); }
(rule__Transition__ActionAssignment_3_1)
{ after(grammarAccess.getTransitionAccess().getActionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InternalTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group__0__Impl
	rule__InternalTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getGroup_0()); }
(rule__InternalTransition__Group_0__0)?
{ after(grammarAccess.getInternalTransitionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group__1__Impl
	rule__InternalTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getGroup_1()); }
(rule__InternalTransition__Group_1__0)?
{ after(grammarAccess.getInternalTransitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group__2__Impl
	rule__InternalTransition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getInternalTransitionAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group__3__Impl
	rule__InternalTransition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getActionAssignment_3()); }
(rule__InternalTransition__ActionAssignment_3)
{ after(grammarAccess.getInternalTransitionAccess().getActionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getInternalTransitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InternalTransition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group_0__0__Impl
	rule__InternalTransition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getOnKeyword_0_0()); }

	'on' 

{ after(grammarAccess.getInternalTransitionAccess().getOnKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getEventAssignment_0_1()); }
(rule__InternalTransition__EventAssignment_0_1)
{ after(grammarAccess.getInternalTransitionAccess().getEventAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InternalTransition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group_1__0__Impl
	rule__InternalTransition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getIfKeyword_1_0()); }

	'if' 

{ after(grammarAccess.getInternalTransitionAccess().getIfKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalTransition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalTransition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getConditionAssignment_1_1()); }
(rule__InternalTransition__ConditionAssignment_1_1)
{ after(grammarAccess.getInternalTransitionAccess().getConditionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SymbolicEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicEvent__Group__0__Impl
	rule__SymbolicEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicEventAccess().getNameAssignment_0()); }
(rule__SymbolicEvent__NameAssignment_0)
{ after(grammarAccess.getSymbolicEventAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolicEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicEventAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getSymbolicEventAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionEvent__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_0__0__Impl
	rule__TransitionEvent__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceAssignment_0_0_0()); }
(rule__TransitionEvent__SourceAssignment_0_0_0)
{ after(grammarAccess.getTransitionEventAccess().getSourceAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_0__1__Impl
	rule__TransitionEvent__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_0_0_1()); }

	'->' 

{ after(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetAssignment_0_0_2()); }
(rule__TransitionEvent__TargetAssignment_0_0_2)
{ after(grammarAccess.getTransitionEventAccess().getTargetAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TransitionEvent__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_1__0__Impl
	rule__TransitionEvent__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetAssignment_0_1_0()); }
(rule__TransitionEvent__TargetAssignment_0_1_0)
{ after(grammarAccess.getTransitionEventAccess().getTargetAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_1__1__Impl
	rule__TransitionEvent__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }

	'<-' 

{ after(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceAssignment_0_1_2()); }
(rule__TransitionEvent__SourceAssignment_0_1_2)
{ after(grammarAccess.getTransitionEventAccess().getSourceAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TransitionEvent__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_1_0__0__Impl
	rule__TransitionEvent__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0()); }

	'->' 

{ after(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetAssignment_1_0_1()); }
(rule__TransitionEvent__TargetAssignment_1_0_1)
{ after(grammarAccess.getTransitionEventAccess().getTargetAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionEvent__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_1_1__0__Impl
	rule__TransitionEvent__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetAssignment_1_1_0()); }
(rule__TransitionEvent__TargetAssignment_1_1_0)
{ after(grammarAccess.getTransitionEventAccess().getTargetAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_1_1_1()); }

	'<-' 

{ after(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionEvent__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_2_0__0__Impl
	rule__TransitionEvent__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceAssignment_2_0_0()); }
(rule__TransitionEvent__SourceAssignment_2_0_0)
{ after(grammarAccess.getTransitionEventAccess().getSourceAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }

	'->' 

{ after(grammarAccess.getTransitionEventAccess().getHyphenMinusGreaterThanSignKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransitionEvent__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_2_1__0__Impl
	rule__TransitionEvent__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_2_1_0()); }

	'<-' 

{ after(grammarAccess.getTransitionEventAccess().getLessThanSignHyphenMinusKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionEvent__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionEvent__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceAssignment_2_1_1()); }
(rule__TransitionEvent__SourceAssignment_2_1_1)
{ after(grammarAccess.getTransitionEventAccess().getSourceAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnterEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnterEvent__Group__0__Impl
	rule__EnterEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnterEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnterEventAccess().getEnterEventAction_0()); }
(

)
{ after(grammarAccess.getEnterEventAccess().getEnterEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnterEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnterEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnterEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnterEventAccess().getEnterKeyword_1()); }

	'enter' 

{ after(grammarAccess.getEnterEventAccess().getEnterKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExitEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitEvent__Group__0__Impl
	rule__ExitEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitEventAccess().getExitEventAction_0()); }
(

)
{ after(grammarAccess.getExitEventAccess().getExitEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExitEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExitEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitEventAccess().getExitKeyword_1()); }

	'exit' 

{ after(grammarAccess.getExitEventAccess().getExitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimerEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerEvent__Group__0__Impl
	rule__TimerEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getTKeyword_0()); }

	't' 

{ after(grammarAccess.getTimerEventAccess().getTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerEvent__Group__1__Impl
	rule__TimerEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getTimerEventAccess().getGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerEvent__Group__2__Impl
	rule__TimerEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getDelayAssignment_2()); }
(rule__TimerEvent__DelayAssignment_2)
{ after(grammarAccess.getTimerEventAccess().getDelayAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerEvent__Group__3__Impl
	rule__TimerEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getAfterKeyword_3()); }

	'after' 

{ after(grammarAccess.getTimerEventAccess().getAfterKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimerEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimerEvent__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getEventAssignment_4()); }
(rule__TimerEvent__EventAssignment_4)
{ after(grammarAccess.getTimerEventAccess().getEventAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SymbolicAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicAction__Group__0__Impl
	rule__SymbolicAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getNameAssignment_0()); }
(rule__SymbolicAction__NameAssignment_0)
{ after(grammarAccess.getSymbolicActionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolicAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicAction__Group__1__Impl
	rule__SymbolicAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getGroup_1()); }
(rule__SymbolicAction__Group_1__0)?
{ after(grammarAccess.getSymbolicActionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolicAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getSymbolicActionAccess().getExclamationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SymbolicAction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicAction__Group_1__0__Impl
	rule__SymbolicAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getAfterKeyword_1_0()); }

	'after' 

{ after(grammarAccess.getSymbolicActionAccess().getAfterKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolicAction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolicAction__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getDelayAssignment_1_1()); }
(rule__SymbolicAction__DelayAssignment_1_1)
{ after(grammarAccess.getSymbolicActionAccess().getDelayAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VarDef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__0__Impl
	rule__VarDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getVarDefAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__1__Impl
	rule__VarDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameAssignment_1()); }
(rule__VarDef__NameAssignment_1)
{ after(grammarAccess.getVarDefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__2__Impl
	rule__VarDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getGroup_2()); }
(rule__VarDef__Group_2__0)?
{ after(grammarAccess.getVarDefAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__3__Impl
	rule__VarDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getGroup_3()); }
(rule__VarDef__Group_3__0)?
{ after(grammarAccess.getVarDefAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getVarDefAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VarDef__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_2__0__Impl
	rule__VarDef__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getVarDefAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_2__1__Impl
	rule__VarDef__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getETypeAssignment_2_1()); }
(rule__VarDef__ETypeAssignment_2_1)
{ after(grammarAccess.getVarDefAccess().getETypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getManyAssignment_2_2()); }
(rule__VarDef__ManyAssignment_2_2)?
{ after(grammarAccess.getVarDefAccess().getManyAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VarDef__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_3__0__Impl
	rule__VarDef__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getEqualsSignKeyword_3_0()); }

	'=' 

{ after(grammarAccess.getVarDefAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarDef__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VarDef__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getInitAssignment_3_1()); }
(rule__VarDef__InitAssignment_3_1)
{ after(grammarAccess.getVarDefAccess().getInitAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignmentAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentAction__Group__0__Impl
	rule__AssignmentAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentActionAccess().getVarAssignment_0()); }
(rule__AssignmentAction__VarAssignment_0)
{ after(grammarAccess.getAssignmentActionAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentAction__Group__1__Impl
	rule__AssignmentAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentActionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignmentActionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentActionAccess().getValueAssignment_2()); }
(rule__AssignmentAction__ValueAssignment_2)
{ after(grammarAccess.getAssignmentActionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FLOAT_LITERAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT_LITERAL__Group__0__Impl
	rule__FLOAT_LITERAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_0()); }
(rule__FLOAT_LITERAL__Alternatives_0)
{ after(grammarAccess.getFLOAT_LITERALAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT_LITERAL__Group__1__Impl
	rule__FLOAT_LITERAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFLOAT_LITERALAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FLOAT_LITERAL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FLOAT_LITERAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLOAT_LITERAL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFLOAT_LITERALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getFLOAT_LITERALAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__POS_INT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__POS_INT__Group__0__Impl
	rule__POS_INT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__POS_INT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPOS_INTAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getPOS_INTAccess().getPlusSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__POS_INT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__POS_INT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__POS_INT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPOS_INTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getPOS_INTAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NEG_INT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEG_INT__Group__0__Impl
	rule__NEG_INT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NEG_INT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEG_INTAccess().getHyphenMinusKeyword_0()); }

	'-' 

{ after(grammarAccess.getNEG_INTAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NEG_INT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NEG_INT__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NEG_INT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNEG_INTAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getNEG_INTAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QNAME__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QNAME__Group__0__Impl
	rule__QNAME__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QNAME__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QNAME__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QNAME__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QNAME__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNAMEAccess().getGroup_1()); }
(rule__QNAME__Group_1__0)*
{ after(grammarAccess.getQNAMEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QNAME__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QNAME__Group_1__0__Impl
	rule__QNAME__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QNAME__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNAMEAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQNAMEAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QNAME__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QNAME__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QNAME__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayLiteral__Group__0__Impl
	rule__DelayLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayLiteralAccess().getIntValueAssignment_0()); }
(rule__DelayLiteral__IntValueAssignment_0)
{ after(grammarAccess.getDelayLiteralAccess().getIntValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayLiteralAccess().getTimeUnitAssignment_1()); }
(rule__DelayLiteral__TimeUnitAssignment_1)
{ after(grammarAccess.getDelayLiteralAccess().getTimeUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EPath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EPath__Group__0__Impl
	rule__EPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EPath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEPathAccess().getVarAssignment_0()); }
(rule__EPath__VarAssignment_0)
{ after(grammarAccess.getEPathAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EPath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EPath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EPath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEPathAccess().getStepsAssignment_1()); }
(rule__EPath__StepsAssignment_1)*
{ after(grammarAccess.getEPathAccess().getStepsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EStep__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EStep__Group__0__Impl
	rule__EStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EStep__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepAccess().getSolidusSpaceKeyword_0()); }

	'/ ' 

{ after(grammarAccess.getEStepAccess().getSolidusSpaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EStep__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EStep__Group__1__Impl
	rule__EStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EStep__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepAccess().getFeatureNameAssignment_1()); }
(rule__EStep__FeatureNameAssignment_1)
{ after(grammarAccess.getEStepAccess().getFeatureNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EStep__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EStep__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EStep__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepAccess().getFilterAssignment_2()); }
(rule__EStep__FilterAssignment_2)?
{ after(grammarAccess.getEStepAccess().getFilterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__StateMachine__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getImportsResourceImportParserRuleCall_0_0()); }
	ruleResourceImport{ after(grammarAccess.getStateMachineAccess().getImportsResourceImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StatesAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_1_0_0()); }
	ruleState{ after(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAbstractTransitionParserRuleCall_1_1_0()); }
	ruleAbstractTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsAbstractTransitionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__VariablesAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getVariablesVarDefParserRuleCall_1_2_0()); }
	ruleVarDef{ after(grammarAccess.getStateMachineAccess().getVariablesVarDefParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModelImport__ImportURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDomainModelImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDataImport__ImportURIAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainDataImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDomainDataImportAccess().getImportURISTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__InitialTransitionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInitialTransitionInitialTransitionParserRuleCall_0_0()); }
	ruleInitialTransition{ after(grammarAccess.getStateAccess().getInitialTransitionInitialTransitionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__StatesAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStatesStateParserRuleCall_2_1_1_0_0()); }
	ruleState{ after(grammarAccess.getStateAccess().getStatesStateParserRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionsAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTransitionsAbstractTransitionParserRuleCall_2_1_1_1_0()); }
	ruleAbstractTransition{ after(grammarAccess.getStateAccess().getTransitionsAbstractTransitionParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__VariablesAssignment_2_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getVariablesVarDefParserRuleCall_2_1_1_2_0()); }
	ruleVarDef{ after(grammarAccess.getStateAccess().getVariablesVarDefParserRuleCall_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitialTransition__ActionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialTransitionAccess().getActionActionParserRuleCall_2_1_0()); }
	ruleAction{ after(grammarAccess.getInitialTransitionAccess().getActionActionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateCrossReference_0_0_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateQNAMEParserRuleCall_0_0_1_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionAccess().getTargetStateQNAMEParserRuleCall_0_0_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateCrossReference_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateCrossReference_0_1_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateQNAMEParserRuleCall_0_1_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionAccess().getTargetStateQNAMEParserRuleCall_0_1_0_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateCrossReference_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_1_1_0()); }
	ruleEvent{ after(grammarAccess.getTransitionAccess().getEventEventParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ConditionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_2_1_0()); }
	ruleCondition{ after(grammarAccess.getTransitionAccess().getConditionConditionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ActionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getActionActionParserRuleCall_3_1_0()); }
	ruleAction{ after(grammarAccess.getTransitionAccess().getActionActionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__EventAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getEventEventParserRuleCall_0_1_0()); }
	ruleEvent{ after(grammarAccess.getInternalTransitionAccess().getEventEventParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__ConditionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getConditionConditionParserRuleCall_1_1_0()); }
	ruleCondition{ after(grammarAccess.getInternalTransitionAccess().getConditionConditionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalTransition__ActionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalTransitionAccess().getActionActionParserRuleCall_3_0()); }
	ruleAction{ after(grammarAccess.getInternalTransitionAccess().getActionActionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicEvent__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicEventAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSymbolicEventAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__SourceAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_0_0_0_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_0_0_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_0_0_0_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__TargetAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_0_0_2_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_0_0_2_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_0_0_2_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__TargetAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_0_1_0_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_0_1_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_0_1_0_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__SourceAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_0_1_2_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_0_1_2_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_0_1_2_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__TargetAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_1_0_1_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__TargetAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_1_1_0_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_1_1_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getTargetStateQNAMEParserRuleCall_1_1_0_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getTargetStateCrossReference_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__SourceAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_2_0_0_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_2_0_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_2_0_0_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionEvent__SourceAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_2_1_1_0()); }
(
{ before(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_2_1_1_0_1()); }
	ruleQNAME{ after(grammarAccess.getTransitionEventAccess().getSourceStateQNAMEParserRuleCall_2_1_1_0_1()); }
)
{ after(grammarAccess.getTransitionEventAccess().getSourceStateCrossReference_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScriptEvent__ScriptAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScriptEventAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
	RULE_SCRIPT_EXPRESSION{ after(grammarAccess.getScriptEventAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__DelayAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getDelayExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTimerEventAccess().getDelayExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimerEvent__EventAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimerEventAccess().getEventEventParserRuleCall_4_0()); }
	ruleEvent{ after(grammarAccess.getTimerEventAccess().getEventEventParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ScriptAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
	RULE_SCRIPT_EXPRESSION{ after(grammarAccess.getConditionAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSymbolicActionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicAction__DelayAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolicActionAccess().getDelayExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getSymbolicActionAccess().getDelayExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScriptAction__ScriptAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScriptActionAccess().getScriptSCRIPT_STATEMENTSTerminalRuleCall_0()); }
	RULE_SCRIPT_STATEMENTS{ after(grammarAccess.getScriptActionAccess().getScriptSCRIPT_STATEMENTSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVarDefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__ETypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getETypeEClassifierCrossReference_2_1_0()); }
(
{ before(grammarAccess.getVarDefAccess().getETypeEClassifierQNAMEParserRuleCall_2_1_0_1()); }
	ruleQNAME{ after(grammarAccess.getVarDefAccess().getETypeEClassifierQNAMEParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getVarDefAccess().getETypeEClassifierCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__ManyAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getManyAlternatives_2_2_0()); }
(rule__VarDef__ManyAlternatives_2_2_0)
{ after(grammarAccess.getVarDefAccess().getManyAlternatives_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarDef__InitAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarDefAccess().getInitExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getVarDefAccess().getInitExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentActionAccess().getVarVarDefCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentActionAccess().getVarVarDefQNAMEParserRuleCall_0_0_1()); }
	ruleQNAME{ after(grammarAccess.getAssignmentActionAccess().getVarVarDefQNAMEParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentActionAccess().getVarVarDefCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentAction__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentActionAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentActionAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__BooleanValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanValueBOOLEAN_LITERALParserRuleCall_0()); }
	ruleBOOLEAN_LITERAL{ after(grammarAccess.getBooleanLiteralAccess().getBooleanValueBOOLEAN_LITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__IntValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getIntValueAlternatives_0()); }
(rule__IntLiteral__IntValueAlternatives_0)
{ after(grammarAccess.getIntLiteralAccess().getIntValueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__FloatValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getFloatValueFLOAT_LITERALParserRuleCall_0()); }
	ruleFLOAT_LITERAL{ after(grammarAccess.getFloatLiteralAccess().getFloatValueFLOAT_LITERALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__StringValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getStringValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UriLiteral__UriAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUriLiteralAccess().getUriURI_LITERALTerminalRuleCall_0()); }
	RULE_URI_LITERAL{ after(grammarAccess.getUriLiteralAccess().getUriURI_LITERALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EObjectUriLiteral__UriAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEObjectUriLiteralAccess().getUriEOBJECT_URI_LITERALTerminalRuleCall_0()); }
	RULE_EOBJECT_URI_LITERAL{ after(grammarAccess.getEObjectUriLiteralAccess().getUriEOBJECT_URI_LITERALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayLiteral__IntValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayLiteralAccess().getIntValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getDelayLiteralAccess().getIntValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayLiteral__TimeUnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayLiteralAccess().getTimeUnitTimeUnitEnumRuleCall_1_0()); }
	ruleTimeUnit{ after(grammarAccess.getDelayLiteralAccess().getTimeUnitTimeUnitEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarRef__VarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefAccess().getVarVarDefCrossReference_0()); }
(
{ before(grammarAccess.getVarRefAccess().getVarVarDefQNAMEParserRuleCall_0_1()); }
	ruleQNAME{ after(grammarAccess.getVarRefAccess().getVarVarDefQNAMEParserRuleCall_0_1()); }
)
{ after(grammarAccess.getVarRefAccess().getVarVarDefCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EPath__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEPathAccess().getVarVarRefParserRuleCall_0_0()); }
	ruleVarRef{ after(grammarAccess.getEPathAccess().getVarVarRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EPath__StepsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEPathAccess().getStepsEStepParserRuleCall_1_0()); }
	ruleEStep{ after(grammarAccess.getEPathAccess().getStepsEStepParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EStep__FeatureNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepAccess().getFeatureNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEStepAccess().getFeatureNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EStep__FilterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepAccess().getFilterEStepFilterParserRuleCall_2_0()); }
	ruleEStepFilter{ after(grammarAccess.getEStepAccess().getFilterEStepFilterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EStepFilter__ScriptAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStepFilterAccess().getScriptScriptExpressionParserRuleCall_0()); }
	ruleScriptExpression{ after(grammarAccess.getEStepFilterAccess().getScriptScriptExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScriptExpression__ScriptAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScriptExpressionAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
	RULE_SCRIPT_EXPRESSION{ after(grammarAccess.getScriptExpressionAccess().getScriptSCRIPT_EXPRESSIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SCRIPT_EXPRESSION : '[[' ( options {greedy=false;} : . )*']]';

RULE_SCRIPT_STATEMENTS : '{{' ( options {greedy=false;} : . )*'}}';

RULE_URI_LITERAL : '@' ('a'..'z'|'A'..'Z'|'0'..'9'|':'|'_'|'-'|'+'|'.'|'/'|'#'|'?'|'='|'&'|'%'|'@'|'$')+;

RULE_EOBJECT_URI_LITERAL : '\u20AC' ('a'..'z'|'A'..'Z'|'0'..'9'|':'|'_'|'-'|'+'|'.'|'/'|'#'|'?'|'='|'&'|'%'|'@'|'$')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


