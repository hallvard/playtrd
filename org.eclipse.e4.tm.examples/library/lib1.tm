<?xml version="1.0" encoding="ASCII"?>
<tm.widgets:Composite xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:libui="http://www.eclipse.org/e4/tm/examples/library/libui.ecore" xmlns:swt.layouts="http://www.eclipse.org/e4/swt/layouts.ecore" xmlns:tm.widgets="http://www.eclipse.org/e4/tm/widgets.ecore" xsi:schemaLocation="http://www.eclipse.org/e4/tm/examples/library/libui.ecore libui.ecore" scriptSource="function init() {&#xD;&#x9;loadEPackage(&quot;http://www.eclipse.org/e4/tm/examples/library/lib.ecore&quot;, &quot;platform:/resource/org.eclipse.e4.tm.examples/library/lib.ecore&quot;);&#xA;&#x9;supportNotifications(this);&#xA;&#x9;this.update();&#xA;}&#xA;&#xD;&#xA;function onSetDataObject(notification) {&#xA;&#x9;this.update();&#xA;}&#xA;function update() {&#xA;&#x9;var uod = this.dataObject;&#xA;&#x9;this.$libraryListView.dataObject = (uod != null ? uod.allLibraries : null);&#xA;}" name="librariesView">
  <controls xsi:type="tm.widgets:ComboBox" scriptSource=" function onSetDataObject(notification) { &#xA;&#x9;this.update();&#xA;}&#xA;function update() {&#xA;&#x9;this.items.clear();&#xA;&#x9;var libraryList = this.dataObject;&#xA;&#x9;if (libraryList instanceof java.util.List) {&#xA;&#x9;&#x9;this.items.addAll(libraryList.mapProperty('name'));&#xA;&#x9;}&#xA;&#x9;this.selectionIndex = 0;&#xA;} &#xA;function onSetSelectionIndex(notification) {&#xA;&#x9;var libraryList = this.dataObject;&#xA;&#x9;var library = null;&#xA;&#x9;if (libraryList != null &amp;&amp; this.selectionIndex >= 0 &amp;&amp; libraryList.size() > this.selectionIndex) {&#xA;&#x9;&#x9;library = libraryList[this.selectionIndex];&#xA;&#x9;}&#xA;&#x9;this.$.$booksView.dataObject = library;&#xA;}" name="libraryListView" selectionIndex="0" text="Old novels and plays">
    <layoutData xsi:type="swt.layouts:GridLayoutData" horizontalAlignment="LEFT" grabExcessHorizontalSpace="true"/>
    <items>Old novels and plays</items>
    <items>Children books</items>
  </controls>
  <controls xsi:type="tm.widgets:Composite" scriptSource="function onSetDataObject(notification) {&#xA;&#x9;this.update();&#xA;}&#xA;&#xA;function update() {&#xA;&#x9;bindingApply(getState, setState, this.dataObject, this.controls[0].$bookListView);&#xA;}&#xA;&#xA;function getState(library, bookListView) {&#xA;&#x9;return (library != null ? library.books : null);&#xA;}&#xA;&#xA;function setState(library, bookListView, bookList) {&#xA;&#x9;bookListView.dataObject = bookList;&#xA;}" name="booksView">
    <layoutData xsi:type="swt.layouts:GridLayoutData" verticalAlignment="FILL" horizontalAlignment="LEFT" grabExcessVerticalSpace="true"/>
    <controls xsi:type="tm.widgets:Composite">
      <layoutData xsi:type="swt.layouts:GridLayoutData" verticalAlignment="FILL" horizontalAlignment="FILL" grabExcessVerticalSpace="true"/>
      <controls xsi:type="tm.widgets:SingleSelectionList" scriptSource="function onSetDataObject(notification) {&#xA;&#x9;this.update();&#xA;}&#xA;function update() {&#xA;&#x9;bindingApply(getState, setState, this);&#xA;&#x9;this.selectionIndex = 0;&#xA;}&#xA;function getState(bookListView) {&#xA;&#x9;var bookList = bookListView.dataObject;&#xA;&#x9;return (bookList instanceof java.util.List ? bookList.mapProperty('title') : new java.util.ArrayList());&#xA;}&#xA;function setState(bookListView, bookNameList) {&#xA;&#x9;var oldSelection = bookListView.selectionIndex;&#xA;&#x9;var newSelection = oldSelection;&#xA;&#x9;if (newSelection &lt; 0) {&#xA;&#x9;&#x9;newSelection = 0;&#xA;&#x9;}&#xA;&#x9;if (newSelection >= bookNameList.size()) {&#xA;&#x9;&#x9;newSelection = bookNameList.size() - 1;&#xA;&#x9;}&#xA;//&#x9;Packages.org.eclipse.emf.common.util.ECollections.setEList(items, bookNameList);&#xA;&#x9;bookListView .items.clear();&#xA;&#x9;bookListView .items.addAll(bookNameList);&#xA;&#x9;bookListView.selectionIndex = newSelection;&#xA;}&#xA;&#xA;function onSetSelectionIndex(notification) {&#xA;&#x9;var bookList = this.dataObject;&#xA;&#x9;var index = this.selectionIndex;&#xA;&#x9;var book = (index &lt; 0 || bookList == null || index >= bookList.size() ? null : bookList[this.selectionIndex]);&#xA;&#x9;this.$.$.$bookPropertiesView.dataObject = book;&#xA;}" name="bookListView" selectionIndex="7">
        <layoutData xsi:type="swt.layouts:GridLayoutData" verticalAlignment="FILL" horizontalAlignment="LEFT" grabExcessVerticalSpace="true"/>
        <selectionIndices>7</selectionIndices>
        <items>Romeo and Juliet</items>
        <items>Peer Gynt</items>
        <items>The Idiot</items>
        <items>War and Peace</items>
        <items>King Lear</items>
        <items>Hamlet</items>
        <items>Brand</items>
        <items>A Dol House</items>
      </controls>
      <controls xsi:type="tm.widgets:PushButton" scriptSource="function onSetSelectionEvent(notification) {&#xA;&#x9;var library = this.$.$.dataObject;&#xA;&#x9;applyAsCommand(newBook, library);&#xA;}&#xA;&#xA;function newBook(library) {&#xA;&#x9;var book = $library.$Book.create();&#xA;&#x9;book.title = &quot;&lt;title>&quot;;&#xA;&#x9;library.books.add(book);&#xA;&#x9;return book;&#xA;}" name="newBookButton" text="New book"/>
      <layout xsi:type="swt.layouts:GridLayout"/>
    </controls>
    <controls xsi:type="tm.widgets:GroupBox" scriptSource="function onSetDataObject(notification) {&#xA;&#x9;this.update();&#xA;}&#xA;function update() {&#xA;&#x9;var book = this.dataObject;&#xA;&#x9;this.$bookTitle.text = (book == null ? &quot;&quot; : book.title);&#xA;&#x9;this.$bookAuthor.dataObject = book;&#xA;}" name="bookPropertiesView" text="Book">
      <layoutData xsi:type="swt.layouts:GridLayoutData" verticalAlignment="TOP" horizontalAlignment="FILL"/>
      <controls xsi:type="tm.widgets:Label" text="TItle"/>
      <controls xsi:type="tm.widgets:Text" scriptSource="function onSetModify(notification) {&#xA;&#x9;var book = this.$.dataObject;&#xA;&#x9;var title = this.text;&#xA;&#x9;if (book != null &amp;&amp; book.title != title) {&#xA;&#x9;&#x9;applyAsCommand(setBookTitle, book, title);&#xA;&#x9;}&#xA;}&#xA;function setBookTitle(book, title) {&#xA;&#x9;book.title = title;&#xA;}" name="bookTitle" text="A Dol House"/>
      <controls xsi:type="tm.widgets:Label" scriptSource="" text="Author"/>
      <controls xsi:type="libui:CustomCombo" scriptSource="function update() {&#xA;&#x9;this.items.clear();&#xD;&#x9;var book = this.dataObject;&#xD;&#x9;this.text = (book == null || book.author == null ? noSelection : book.author.name)&#xA;}&#xA;&#xA;function autoSetProperty(book, authorName, authors) {&#xD;&#x9;&#x9;var author = book.author;&#xD;//&#x9;&#x9;java.lang.System.out.println(&quot;Authors: &quot; + authors);&#xD;//&#x9;&#x9;java.lang.System.out.println(&quot;Author name: &quot; + authorName);&#xD;&#x9;&#x9;if (authors.size() == 1) {&#xD;&#x9;&#x9;&#x9;author = authors[0];&#xD;&#x9;&#x9;&#x9;authorName = author.name;&#xA;&#x9;&#x9;} else if (authorName == noSelection) {&#xD;&#x9;&#x9;&#x9;author = null;&#xD;&#x9;&#x9;}&#xD;&#x9;&#x9;if (author != book.author) {&#xD;//&#x9;&#x9;&#x9;java.lang.System.out.println(&quot;Setting author to &quot; + (author == null ? noSelection : author.name));&#xA;&#x9;&#x9;&#x9;applyAsCommand(setAuthor, book, author);&#xD;&#x9;&#x9;}&#xA;}&#xD;&#xD;function onSetSelectionIndex(notification) {&#xD;}&#xD;&#xD;function setAuthor(book, author) {&#xD;&#x9;book.author = author;&#xA;}&#xA;&#xA;function getAllEObjects(uod) {&#xA;&#x9;return uod.allAuthors;&#xA;}&#xA;function getLabel(author) {&#xD;&#x9;return author.name;&#xD;}&#xA;/*&#xD;&#xA;function trimLeft(s) {&#xD;&#x9;var i = 0;&#xD;&#x9;while (i &lt; s.length) {&#xD;&#x9;&#x9;if (s.charAt(i) != ' ') {&#xD;&#x9;&#x9;&#x9;return (i > 0 ? s.substring(i, s.length) : s);&#xD;&#x9;&#x9;}&#xD;&#x9;&#x9;i++;&#xD;&#x9;}&#xD;&#x9;return &quot;&quot;;&#xD;} &#xD;&#xD;function startsWith(s1, s2) {&#xD;&#x9;return (s1.length >= s2.length &amp;&amp; s1.substring(0, s2.length) == s2);&#xD;}&#xD;&#xD;function getAuthorsByName(allAuthors, authorName) {&#xD;&#x9;var authors = allAuthors.findMany(function (author) { return author.name == authorName;}, 0);&#xD;&#x9;if (authors.size() == 0) {&#xA;&#x9;&#x9;var startsWithName = function (author) { return startsWith(author.name, authorName);}&#xD;&#x9;&#x9;authors = allAuthors.findMany(startsWithName);&#xD;&#x9;}&#xD;&#x9;return authors;&#xA;}&#xA;*/" name="bookAuthor" selectionIndex="1" text="Ibsen, Henrik">
        <items>&lt;none></items>
        <items>Ibsen, Henrik</items>
      </controls>
      <layout xsi:type="swt.layouts:GridLayout" numColumns="2"/>
    </controls>
    <layout xsi:type="swt.layouts:GridLayout" numColumns="2"/>
  </controls>
  <layout xsi:type="swt.layouts:GridLayout"/>
</tm.widgets:Composite>
